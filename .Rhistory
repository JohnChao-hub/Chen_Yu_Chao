slope = reg$coefficients[2] ,
color="red") +
geom_point()+
geom_smooth(method = lm , se = FALSE) +
labs(x = "ACT score" , y = "freshman year GPA")
summary(reg)
lm(Y~X)
reg$coefficients
summary(reg)
reg$coefficients # b0 and b1 coefficients
summary(reg)
cor(X, Y)
GPA <- read.table("data/4589198.txt")
attach(GPA)
X <- V2
Y <- V1
reg <- lm(Y~X)
reg$coefficients # b0 and b1 coefficients
summary(reg) # y hat = 0.03883x + 2.11405
ggplot(GPA , aes(X ,Y)) +
geom_abline(intercept = reg$coefficients[1],
slope = reg$coefficients[2] ,
color="red") +
geom_point()+
geom_smooth(method = lm , se = FALSE) +
labs(x = "ACT score" , y = "freshman year GPA")
cor(X, Y)
reg$coefficients[2]
anova(reg)[2,2]
anova(reg)
e <- Y - fitted.values(reg)
sum(e^2)
anova(reg)[2,2]
#manually--------------------------------
e <- Y - fitted.values(reg) #residuals
sum(e^2)#
summary(reg)
e
Y
fitted.values(reg)
summary(reg)
Y - fitted.values(reg)
summary(reg)
length(Y)
summary(reg)
sqrt(sum(e^2)/118)
summary(reg)
sqrt(sum(e^2)/118)
summary(reg)
sqrt(sum(e^2)/length(Y)-2)#residual standard error
length(Y)-2
sqrt(sum(e^2)/(length(Y)-2))#residual standard error
knitr::opts_chunk$set(echo = TRUE, eval = TRUE )
library(tidyverse)
library(ggplot2)
sum((residuals(reg))^2)
var_est <- sum(e^2)/(n-2)
var_est
sqrt(var_est)
anova(reg)[3,3]
var_est
sqrt(var_est)
anova(reg)[3,3]
anova(reg)[2,2]
n <- length(X)
var_est <- sum(e^2)/(n-2)
var_est
0.6231^2
var_est
sqrt(var_est)
anova(reg)[3,3]
n <- length(X)
var_est <- sum(e^2)/(n-2)
var_est
sqrt(var_est)
var_est
n <- length(X)
var_est <- sum(e^2)/(n-2)
var_est
sqrt(var_est)
sqrt(sum(e^2)/(length(Y)-2))#residual standard error
sqrt(var_est)
confint(reg , level = .99)
predict(reg , data.frame(X =28) , interval = "confidence")
predict(reg , data.frame(X =28) , interval = "prediction")
#Yhat is same. it doesnt on line
w <- sqrt(2*qf(0.95, 2, n-2))
margin <- w*s*sqrt(1/n + (X - mean(X))^2/sxx)
n <- length(X)
w <- sqrt(2*qf(0.95, 2, n-2))
sxx <- (n-1)*var(X)
e <- reg$residuals
s <- sqrt(sum(e^2)/(n-2))
margin <- w*s*sqrt(1/n + (X - mean(X))^2/sxx)
upper.band <- predict(reg) +margin
lower.band <- predict(reg) -margin
n <- length(X)
w <- sqrt(2*qf(0.95, 2, n-2))
sxx <- (n-1)*var(X)
e <- reg$residuals
s <- sqrt(sum(e^2)/(n-2))
margin <- w*s*sqrt(1/n + (X - mean(X))^2/sxx)
upper.band <- predict(reg) +margin
lower.band <- predict(reg) -margin
predict(reg , data.frame(X =28) , interval = "prediction")
knitr::opts_chunk$set(echo = TRUE)
0.0002457 +  2.0484(0.0052)
0.0002457 + 2.0484(0.0052)
0.0002457 + 2.0484*(0.0052)
0.0002457- 2.0484*(0.0052)
0.0002457 + 2.0484*(0.0052)
0.0002457- 2.0484*(0.0052)
fitted.values(reg)
Yhat + W*s*sqrt(1/n+(X-mean(X))^2/Sxx)
predict(reg)
0.0002457 + 2.0484*(0.0052/sqrt((35^2)^29)
0.0002457 + 2.0484*(0.0052/sqrt((35^2)^29)
0.0002457 + 2.0484*(0.0052/sqrt((35^2)^29))
0.0002457 + 2.0484*(sqrt((0.01^2*29)/28)/sqrt((35^2)^29))
0.0002457 + 2.0484*(sqrt((0.01^2*29)/28)/sqrt((35^2)^29))
0.0002457 + 2.0484*(sqrt((0.01^2*29)/28)/sqrt((35^2)^29))
sqrt((0.01^2*29)/28)
sqrt(35^2*29)
sqrt((0.01^2*29)/28) / sqrt(35^2*29)
0.0002457 + 2.0484*(sqrt(((0.01^2)*29)/28) / (sqrt((35^2)*29)))
sqrt(((1-0.86^2)*(0.01^2))/(28*(35^2)))
sqrt((((1-(0.86^2))*(0.01^2))/(28*(35^2)))
sqrt((((1-(0.86^2))*(0.01^2))/(28*(35^2)))
setwd("~/Desktop/STAT_613_DS/week3/Homework")
knitr::opts_chunk$set(echo = TRUE)
data(USArrests)
USArrests
dim(USArrests)
USArrests
view(USArrests)
str(USArrests)
USArrests %>%
map(min)
USArrests %>%
map(max)
View(USArrests)
USArrests %>%
map(max) %>% select(Assault)
USArrests %>%
map(max) %>% select(`Assault`)
USArrests %>%
select(`Assault`)
USArrests %>%
select(Assault)
USArrests %>%
select(Assault) %>% mapply(max)
USArrests %>%
select(Assault) %>% map(max)
USArrests %>%
map(max) %>%
USArrests %>%
map(max)
USArrests %>%
map(max)
USArrests %>%
map_dbl(max)
cars
USArrests
cars
mtcars
USArrests %>%
filter(Assault == 236)
USArrests %>%
map_dbl(max)
USArrests %>%
map_dbl(max) %>%
filter(Assault == 337)
USArrests %>%
map_dbl(max) %>%
filter(Assault == 337.0)
USArrests %>%
filter(Assault == 337)
USArrests %>%
map_dbl(max)
USArrests %>%
filter(Assault == 337
USArrests %>%
USArrests %>%
filter(Assault == 337)
library(nycflights13)
flights
flights %>% filter(year == 2013)
flights %>% filter(year = 2013)
flights
str(flights)
typeof(flights)
str(flights)
flights %>%
filter(!is.na(air_time))
flights %>%
filter(is.na(air_time))
flights %>%
filter(!is.na(air_time))
flights %>%
filter(is.na(air_time))
flights %>%
filter(!is.na(air_time)) %>%
group_by(dest, origin)
flights %>%
filter(!is.na(air_time)) %>%
group_by(dest, origin) %>%
mutate(
air_time_median = median(air_time),
air_time_iqr = IQR(air_time),
n = n(),
air_time_standard = (air_time - air_time_median) / air_time_iqr)
flights %>%
filter(!is.na(air_time)) %>%
group_by(dest) %>%
mutate(
air_time_median = median(air_time),
air_time_iqr = IQR(air_time),
n = n(),
air_time_standard = (air_time - air_time_median) / air_time_iqr)
flights %>%
filter(!is.na(air_time)) %>%
group_by(dest) %>%
mutate(
air_time_median = median(air_time),
air_time_iqr = IQR(air_time),
n = n(),
air_time_standard = (air_time - air_time_median) / air_time_iqr)
flights %>%
filter(!is.na(air_time)) %>%
group_by(year) %>%
mutate(
air_time_median = median(air_time),
air_time_iqr = IQR(air_time),
n = n(),
air_time_standard = (air_time - air_time_median) / air_time_iqr)
flights %>%
filter(!is.na(air_time)) %>%
group_by(year)
flights %>% group_by(dep_delay_lag) %>%
summarise(dep_delay_mean = mean(dep_delay))
flights %>% group_by(year) %>%
summarise(dep_delay_mean = mean(dep_delay))
flights %>% group_by(year) %>%
summarise(dep_delay_mean = mean(dep_delay))
unique(flights$year)
flights
unique(flights$carrier)
flights %>% group_by(carrier) %>%
summarise(dep_delay_mean = mean(dep_delay))
unique(flights$carrier)
flights %>% group_by(carrier) %>%
summarise(dep_delay_mean = mean(dep_delay))
output <- vector("list", ncol(nycflights13::flights))
names(output) <- names(nycflights13::flights)
for (i in names(nycflights13::flights)) {
output[[i]] <- class(nycflights13::flights[[i]])
}
output
names(nycflights13::flights)
vector("list", ncol(flights))
output <- vector("list", ncol(flights))
output
vector("double", ncol(flights))
output <- vector("double", ncol(flights))
names(flights)
names(output) <- names(flights)
names(output)
for (i in names(flights)) {
output[[i]] <- class(flights[[i]])
}
output
output <- vector("list", ncol(flights))
output
output <- vector("list", ncol(flights))
names(output) <- names(flights)
for (i in names(flights)) {
output[[i]] <- class(flights[[i]])
}
output
names(flights)
output <- vector("list", ncol(flights))
names(output) <- names(flights)
for (i in names(flights)) {
output[[i]] <- typeof(flights[[i]])
}
output
names(flights)
typeof(flights[[1]])
output <- vector("list", ncol(flights))
names(output) <- names(flights)
names(output)
output
output <- vector("double", ncol(flights))
output <- vector("double", ncol(flights))
output
names(output) <- names(flights)
for (i in names(flights)) {
output[[i]] <- typeof(flights[[i]])
}
output
output <- vector("vector", ncol(flights))
?vector()
output <- vector("names\", ncol(flights))
output <- vector("names", ncol(flights))
names(output) <- names(flights)
for (i in names(flights)) {
output[[i]] <- typeof(flights[[i]])
}
output
output
output <- vector("list", ncol(flights))
output
output <- vector("list", ncol(flights))
output
for (i in names(flights)) {
output[[i]] <- typeof(flights[[i]])
}
output
output
typeof(flights[[1]])
names(output) <- names(flights)
for (i in names(flights)) {
output[[i]] <- typeof(flights[[i]])
}
output
output <- vector("list", ncol(flights))
for (i in names(flights)) {
output[[i]] <- typeof(flights[[i]])
}
output
output <- vector("list", ncol(flights))
for (i in seq_along(flights)) {
output[[i]] <- typeof(flights[[i]])
}
output
typeof(flights[[1]])
flights %>%
map(class)
flights %>%
map(class)
flights %>%
map(typeof)
iris
iris_uniq <- vector("double", ncol(iris))
names(iris_uniq) <- names(iris)
for (i in names(iris)) {
iris_uniq[i] <- n_distinct(iris[[i]])
}
iris_uniq
vector("double", ncol(iris))
iris_uniq <- vector("double", ncol(iris))
iris_uniq
names(iris_uniq)
names(iris)
names(iris_uniq) <- names(iris)
names(iris_uniq)
names(iris)
iris_uniq[1]
iris_uniq <- vector("double", ncol(iris))
names(iris_uniq) <- names(iris)
iris_uniq[1]
iris_uniq <- vector("double", ncol(iris))
iris_uniq[1]
names(iris_uniq) <- names(iris)
iris_uniq[1]
for (i in iris) {
iris_uniq[i] <- n_distinct(iris[[i]])
}
for (i in iris) {
iris_uniq[i] <- n_distinct(iris[[i]])
}
for (i in iris) {
iris_uniq[i] <- n_distinct(iris[[i]])
}
for (i in iris) {
iris_uniq[i] <- n_distinct(iris[[i]])
}
for (i in iris) {
iris_uniq[i] <- n_distinct(iris[[i]])
}
for (i in names(iris)) {
iris_uniq[i] <- n_distinct(iris[[i]])
}
n_distinct(iris[[1]])
output <- vector("double", ncol(mtcars))
names(output) <- names(mtcars)
for (i in names(mtcars)) {
output[i] <- mean(mtcars[[i]])
}
output
for (i in names(mtcars)) {
output[i] <- mean(mtcars[[i]])
}
print(i+1)
print(i+"1")
for (i in names(mtcars)) {
print(i+"1")
}
print(i)
for (i in names(mtcars)) {
print(i)
}
for (i in col(mtcars)) {
print(i)
}
for (i in names(mtcars)) {
print(i)
}
iris_uniq <- vector("double", ncol(iris))
names(iris_uniq) <- names(iris)
iris_uniq
names(iris)
n_distinct(iris[[Sepal.Width]]
n_distinct(iris[[Sepal.Width]]
n_distinct(iris[["Sepal.Width"]]
n_distinct(iris[["Sepal.Width"]]
n_distinct(iris[["Sepal.Width"]]
n_distinct(iris[[`Sepal.Width`]]
iris_uniq <- vector("double", ncol(iris))
names(iris_uniq) <- names(iris)
for (i in names(iris)) {
iris_uniq[i] <- mean(iris[[i]])
}
iris_uniq
vector("double", ncol(iris))
iris_uniq <- vector("double", ncol(iris))
names(iris_uniq) <- names(iris)
for (i in names(iris)) {
iris_uniq[i] <- mean(iris[[i]])
}
iris_uniq
iris
Y <- list("ball", 25, 12.25, FALSE, b = 1:5, c = list(-1, "west"))
Y
str(Y[1:3])
output2 <- vector("double", ncol(mtcars))  # 1. output
for (i in seq_along(mtcars)) {            # 2. sequence
output2[[i]] <- mean(mtcars[[i]])      # 3. body
}
output2
mtcars
mtcars %>%
map(~. + 3)
iris %>%
map(summary)
factor(iris$Species)
models <- iris %>%
split(.$Species) %>%
map(~lm(Sepal.Length~Sepal.Width))
models <- iris %>%
split(.$Species) %>%
map(~lm(Sepal.Length~Sepal.Width , data = .))
models
library(tidyverse)
GPA <- read.table("data/4589198.txt")
GPA <- read.table("data/4589198.txt")
attach(GPA)
X <- V2
Y <- V1
reg <- lm(Y~X)
reg$coefficients # b0 and b1 coefficients
summary(reg) # y hat = 0.03883x + 2.11405
ggplot(GPA , aes(X ,Y)) +
geom_abline(intercept = reg$coefficients[1],
slope = reg$coefficients[2] ,
color="red") +
geom_point()+
geom_smooth(method = lm , se = FALSE) +
labs(x = "ACT score" , y = "freshman year GPA")
cor(X, Y)
predict(reg, data.frame(X =30))
sqrt(sum(e^2)/(length(Y)-2))#residual standard error
n <- length(X)
var_est <- sum(e^2)/(n-2)
var_est # square of sigma
sqrt(var_est) #residual standard error as well (sigma)
anova(reg)[2,2]
#manually--------------------------------
e <- Y - fitted.values(reg) #residuals
sum(e^2)# the sum of the squared residuals
n <- length(X)
w <- sqrt(2*qf(0.95, 2, n-2))
sxx <- (n-1)*var(X)
e <- reg$residuals
s <- sqrt(sum(e^2)/(n-2))
margin <- w*s*sqrt(1/n + (X - mean(X))^2/sxx)
upper.band <- predict(reg) +margin
lower.band <- predict(reg) -margin
plot(X,Y,xlab="X = ACT scores" ,ylab="Y = GPA at the end
of the freshman year")
abline(reg,col="red")
lines(X,upper.band,col="blue")
lines(X,lower.band,col="blue")
n <- length(X)
w <- sqrt(2*qf(0.95, 2, n-2))
sxx <- (n-1)*var(X)
e <- reg$residuals
s <- sqrt(sum(e^2)/(n-2))
margin <- w*s*sqrt(1/n + (X - mean(X))^2/sxx)
upper.band <- predict(reg) +margin
lower.band <- predict(reg) -margin
plot(X,Y,xlab="X = ACT scores" ,ylab="Y = GPA at the end
of the freshman year")
abline(reg,col="red")
lines(X,upper.band,col="blue")
lines(X,lower.band,col="blue")
plot(X,Y,xlab="X = ACT scores" ,ylab="Y = GPA at the end
of the freshman year")
abline(reg,col="red")
lines(X,upper.band,col="blue")
lines(X,lower.band,col="blue")
anova(reg)
